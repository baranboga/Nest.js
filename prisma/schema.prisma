// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//Burada schemalarımızı oluşturuyoruz. Daha sonra prisma migrate komutu ile bu schemaları veritabanımıza uygulayacağız.

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
// @unique ile email alanının benzersiz olmasını sağlıyoruz.
  email String @unique
  hash  String?

  firstName String?
  lastName  String?

  bookmarks Bookmark[]

// @@map("users") ile bu modelin veritabanında users tablosuna karşılık geldiğini belirtiyoruz.
  @@map("users")
}

//@relation ile bu modelin User modeli ile ilişkili olduğunu belirtiyoruz.
  //fields: [userId] ile bu ilişkinin userId alanı ile sağlandığını belirtiyoruz.
  //references: [id] ile bu ilişkinin User modelinin id alanı ile sağlandığını belirtiyoruz.
model Bookmark {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  title       String
  description String?
  link        String
  fileUrl     String?  // Dosya URL'i için yeni alan
  fileName    String?  // Dosya adı için yeni alan
  fileType    String?  // Dosya tipi için yeni alan
  userId      Int
  user        User     @relation(fields: [userId], references: [id])

  @@map("bookmarks")
}

// Category model
model Category {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  name      String
  questions Question[]

  @@map("categories")
}

// Yeni Question modeli
// Question model
model Question {
  id         Int       @id @default(autoincrement())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  title      String
  question1  String
  question2  String
  question3  String
  lat        Float
  lng        Float
  categoryId Int?
  category   Category? @relation(fields: [categoryId], references: [id])

  @@map("questions")
}
